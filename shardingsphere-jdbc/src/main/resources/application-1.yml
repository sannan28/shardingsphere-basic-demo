spring:
  shardingsphere:
    datasource: # 数据源配置
      names: ds0
      ds0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://192.168.64.14:3307/sharding-jdbc-course_db?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
        username: root
        password: root
    rules: # 分片规则配置
      sharding:
        tables:
          course: # 目标表配置(对应数据库中的实际表名称)
            actual-data-nodes: ds0.course_$->{1..2}   # 实际数据节点（格式：数据源.表名）
            table-strategy: # 分表策略
              standard:
                shardingColumn: cid
                sharding-algorithm-name: course_inline
            key-generate-strategy: # 主键生成策略
              column: cid
              key-generator-name: snowflake
        sharding-algorithms:  # 分片算法配置
          course_inline:
            type: INLINE
            props:
              algorithm-expression: course_$->{cid % 2 + 1}

        algorithm-expression:  # 分布式序列算法
          snowflake:
            type: SNOWFLAKE
    props:  # 显示SQL日志
      sql-show: true
  main:
    allow-bean-definition-overriding: true
